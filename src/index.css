@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

@layer base {
  html {
    background-color: rgb(var(--color-background));
    overscroll-behavior: none;
  }

  :root {
    --color-background: 255 255 255; /* white */
    --color-foreground: 17 24 39;    /* gray-900 */
    --color-muted: 243 244 246;       /* gray-100 */
    --color-text-muted: 107 114 128;  /* gray-500 */
    --color-accent: 139 92 246;       /* purple-500 */
    --color-accent-secondary: 79 70 229; /* indigo-600 */
    --color-border: 229 231 235;     /* gray-200 */
    --join-button-text-color: black; /* Text color for light mode */
  }

  .dark {
    /* Updated background to #19191a */
    --color-background: 25 25 26;
    --color-foreground: 249 250 251;  /* gray-50 */
    /* Updated muted background to a lighter #28282a */
    --color-muted: 40 40 42;
    --color-text-muted: 156 163 175; /* gray-400 */
    --color-accent: 167 139 250;      /* purple-400 */
    --color-accent-secondary: 99 102 241; /* indigo-400 */
    --color-border: 55 65 81;         /* gray-700 */
    --join-button-text-color: white;  /* Text color for dark mode */
  }

  body {
    transition: background-color 0.5s ease-in-out, color 0.5s ease-in-out;
  }
}

@layer utilities {
  /* Find your existing @keyframes rule for the scroll and update it */
@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    /* Use the variable for the scroll distance */
    transform: translateX(var(--scroll-width));
  }
}

/* Find your existing .animate-scroll class and update it */
.animate-scroll {
  /* Use the variable for the animation duration */
  animation: scroll var(--animation-duration) linear infinite;
}

/* This class should already exist from your previous code */
.pause-on-hover:hover {
    animation-play-state: paused;
}

  .text-shadow {
    text-shadow: 0 2px 4px rgba(0,0,0,0.10);
  }
  .text-shadow-lg {
    text-shadow: 0 4px 8px rgba(0,0,0,0.15);
  }

  @keyframes circling-glow {
    0% {
      box-shadow: 0 0 5px rgba(139, 92, 246, 0.5), 0 0 10px rgba(139, 92, 246, 0.4), 0 0 15px rgba(139, 92, 246, 0.3), 0 0 20px rgba(139, 92, 246, 0.2);
    }
    50% {
      box-shadow: 0 0 20px rgba(139, 92, 246, 0.7), 0 0 30px rgba(139, 92, 246, 0.6), 0 0 40px rgba(139, 92, 246, 0.5), 0 0 50px rgba(139, 92, 246, 0.4);
    }
    100% {
      box-shadow: 0 0 5px rgba(139, 92, 246, 0.5), 0 0 10px rgba(139, 92, 246, 0.4), 0 0 15px rgba(139, 92, 246, 0.3), 0 0 20px rgba(139, 92, 246, 0.2);
    }
  }

  .join-button {
    background-color: var(--color-accent);
    color: var(--join-button-text-color);
    font-weight: bold;
    padding: 0.5rem 1.5rem;
    border-radius: 9999px;
    transition: all 0.3s ease-in-out;
    animation: circling-glow 3s infinite;
  }
}
/* Add styles for the scrolling ribbon */
.scrolling-ribbon {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0; /* Ensures it's in the background */
  pointer-events: none; /* Allows clicks to pass through */
  transform: rotate(180deg); /* Flips the SVG to draw from bottom to top */
}

/* Define the color variables for the gradient stops */
.scrolling-ribbon #ribbon-gradient stop {
  stop-color: hsl(var(--color-accent));
}

.scrolling-ribbon #ribbon-gradient stop[offset="80%"],
.scrolling-ribbon #ribbon-gradient stop[offset="100%"] {
  stop-color: hsl(var(--color-accent-secondary));
}

@keyframes floating {
    0% { transform: translateY(0px) translateX(0px); }
    50% { transform: translateY(-10px) translateX(5px); }
    100% { transform: translateY(0px) translateX(0px); }
  }

.animate-floating {
    animation: floating 6s ease-in-out infinite;
  }

  /* Hide scrollbar for Chrome, Safari and Opera */
.no-scrollbar::-webkit-scrollbar {
    display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.no-scrollbar {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
}